{{ if .Values.enabled }}
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: loomio
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: loomio
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: failure-domain.beta.kubernetes.io/zone
                  operator: In
                  values:
                  - us-east-1c
      containers:
        - name: loomio
          image: {{ .Values.loomio.image.repository }}:{{ .Values.loomio.image.tag }}
          ports:
            - containerPort: 3000
          resources: {"requests": {"cpu": "100m", "memory": "400Mi"}, "limits": {"memory": "1Gi"}}
          envFrom:
            - configMapRef: {"name": "loomio"}
            - secretRef: {"name": "loomio"}
          {{ if .Values.initializeDb }}
          command:
            - bash
            - "-c"
            - |
              echo "$RAILS_ENV"
              while ! rake db:setup; do sleep 5; done
              echo rake db:setup completed successfully, disable initializeDb value and redeploy
              while true; do sleep 86400; done
          {{ end }}
          volumeMounts:
            - name: data
              subPath: uploads
              mountPath: /loomio/public/system
            - name: data
              subPath: files
              mountPath: /loomio/public/files
            - name: data
              subPath: plugins
              mountPath: /loomio/plugins/docker
            - name: data
              subPath: client
              mountPath: /loomio/public/client
        {{ if .Values.initializeDb }}{{ else }}
        - name: worker
          image: {{ .Values.loomio.image.repository }}:{{ .Values.loomio.image.tag }}
          resources: {"requests": {"cpu": "100m", "memory": "400Mi"}, "limits": {"memory": "1Gi"}}
          envFrom:
            - configMapRef: {"name": "loomio"}
            - secretRef: {"name": "loomio"}
          env:
            - name: TASK
              value: worker
          volumeMounts:
            - name: data
              subPath: uploads
              mountPath: /loomio/public/system
            - name: data
              subPath: files
              mountPath: /loomio/public/files
            - name: data
              subPath: plugins
              mountPath: /loomio/plugins/docker
            - name: data
              subPath: client
              mountPath: /loomio/public/client
        {{ end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: loomio-data
{{ end }}
